{"version":3,"sources":["combinations.ts","ComboGrid.tsx","ThreeLineCombos.tsx","Book.tsx","Board.tsx","Cell.tsx","Footer.tsx","ActiveCount.tsx","SecondChancePointsPanel.tsx","LoadingIcon.tsx","storage.ts","analytics.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getAllCombinations","Grid","styled","div","Cell","props","active","ComboGrid","combo","cells","i","push","toString","Wrapper","PlusMore","span","ThreeLineCombos","combos","slice","map","length","Book","process","Board","CellContainer","src","img","alt","StyledP","p","Footer","href","target","rel","Date","getFullYear","StyledCount","ActiveCount","count","Button","button","Separator","SecondChancePointsPanel","onReset","onReshuffle","onClick","LoadingIcon","color","size","STORAGE_KEY","ReactGA","initialize","debug","pageview","window","location","pathname","search","App","loadedData","defaultCombo","existingCombo","localStorage","getItem","JSON","parse","load","Array","fill","useState","cellStates","setCellStates","reshuffling","setReshuffling","setAndPersistCellStates","setItem","stringify","save","getActiveCount","reduce","prev","curr","reset","cell","newCellsState","handleCellClick","category","action","label","value","event","TrackEvent","setTimeout","activePart","inactivePart","shuffledCombo","j","Math","floor","random","temp","shuffleCombination","combination","potentialCombos","forEach","winningCombo","w","c","potentialCombo","indexOf","compareCombos","getPotentialCombos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMA+EeA,G,MA3EY,iBAAqB,CAC9C,EACE,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAAM,GAAM,GAAK,GAAK,GAAM,GAAM,GAAM,GAEpF,EACE,GAAM,GAAM,GAAM,GAAK,GAAM,GAAM,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAK,GAAK,GAEpF,EACE,GAAK,GAAM,GAAM,GAAM,GAAK,GAAK,GAAM,GAAM,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAK,GAEpF,EACE,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAM,GAAM,GAAK,GAAM,GAAM,GAEnF,EACE,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAM,GAAM,GAAM,GAAK,GAAK,GAAM,GAAM,GAAK,GAAM,GAEpF,EACE,GAAM,GAAM,GAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAM,GAAM,GAEpF,EACE,GAAK,GAAM,GAAK,GAAM,GAAM,GAAK,GAAK,GAAM,GAAM,GAAM,GAAK,GAAM,GAAK,GAAK,GAAK,GAEpF,EACE,GAAK,GAAM,GAAM,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAM,GAEnF,EACE,GAAK,GAAK,GAAK,GAAK,GAAM,GAAM,GAAK,GAAM,GAAM,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAEnF,EACE,GAAK,GAAM,GAAM,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAM,GAAM,GAEpF,EACE,GAAM,GAAK,GAAM,GAAK,GAAM,GAAK,GAAK,GAAM,GAAM,GAAK,GAAM,GAAM,GAAK,GAAK,GAAK,GAEpF,EACE,GAAK,GAAM,GAAM,GAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAM,GAAK,GAAM,GAAM,GAEpF,EACE,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAK,GAAM,GAAM,GAAM,GAAK,GAAM,GAAM,GAAM,GAAK,GAEpF,EACE,GAAM,GAAM,GAAM,GAAK,GAAM,GAAM,GAAK,GAAK,GAAK,GAA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","file":"static/js/main.4166f8cf.chunk.js","sourcesContent":["// prettier-ignore\nexport type Combination = [boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean];\n\n// prettier-ignore\nconst getAllCombinations = (): Combination[] => [\n  [ //A\n    true,true,true,true,false,true,false,true,false,false,true,true,false,false,false,true\n  ],\n  [ //S\n    false,false,false,true,false,false,true,true,false,true,false,true,true,true,true,true\n  ],\n  [ //G\n    true,false,false,false,true,true,false,false,true,false,true,false,true,true,true,true\n  ],\n  [ //M\n    true,true,true,true,true,false,true,false,true,true,false,false,true,false,false,false\n  ],\n  [ //B\n    true,true,true,true,false,true,false,false,false,true,true,false,false,true,false,true\n  ],\n  [ //O\n    false,false,false,true,true,true,true,true,false,true,false,true,true,false,false,true\n  ],\n  [ //N\n    true,false,true,false,false,true,true,false,false,false,true,false,true,true,true,true\n  ],\n  [ //I\n    true,false,false,true,true,false,true,false,true,true,true,true,true,false,false,false\n  ],\n  [ //U\n    true,true,true,true,false,false,true,false,false,true,true,false,true,false,true,false\n  ],\n  [ //H\n    true,false,false,true,false,true,false,true,true,true,true,true,false,false,false,true\n  ],\n  [ //C\n    false,true,false,true,false,true,true,false,false,true,false,false,true,true,true,true\n  ],\n  [ //T\n    true,false,false,false,true,true,true,true,true,false,true,false,true,false,false,true\n  ],\n  [ //D\n    true,true,true,true,false,true,true,false,false,false,true,false,false,false,true,true\n  ],\n  [ //K\n    false,false,false,true,false,false,true,true,true,true,true,true,true,false,false,true\n  ],\n  [ //W\n    true,true,false,false,false,true,false,false,false,true,true,false,true,true,true,true\n  ],\n  [ //P\n    true,false,false,true,true,true,true,true,true,true,false,false,true,false,false,false\n  ],\n  [ //V\n    true,true,true,true,false,true,true,false,false,true,false,false,true,true,false,false\n  ],\n  [ //Q\n    true,false,false,true,true,true,true,true,false,false,true,true,false,false,false,true\n  ],\n  [ //J\n    false,false,true,true,false,false,true,false,false,true,true,false,true,true,true,true\n  ],\n  [ //E\n    true,false,false,false,true,true,false,false,true,true,true,true,true,false,false,true\n  ],\n  [ //F\n    true,false,true,false,true,true,true,true,false,false,true,false,false,false,true,true\n  ],\n  [ //X\n    false,false,true,true,false,false,true,false,true,true,true,true,true,false,true,false\n  ],\n  [ //L\n    true,true,false,false,false,true,false,false,true,true,true,true,false,true,false,true\n  ],\n  [ //R\n    false,true,false,true,true,true,true,true,false,true,false,false,true,true,false,false\n  ]\n];\n\nexport default getAllCombinations;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Combination } from \"./combinations\";\n\nconst Grid = styled.div`\n  background: #e3d69c;\n  border: 1px solid #969074;\n  display: inline-block;\n  font-size: 0;\n  margin: 0 12px 12px 0;\n  padding: 3px;\n  width: 72px;\n`;\n\ntype CellProps = {\n  active?: boolean;\n};\nconst Cell = styled.div<CellProps>`\n  ${(props) => `\n    background: ${props.active ? \"#fff\" : \"transparent\"};\n    border: 2px solid ${props.active ? \"#fff\" : \"rgba(255,255,255,0.4)\"};\n    border-radius: 50%;\n    display: inline-block;\n    height: 14px;\n    margin: 1px;\n    width: 14px;\n  `}\n`;\n\ntype ComboGridProps = {\n  combo: Combination;\n};\nconst ComboGrid = (props: ComboGridProps) => {\n  const { combo } = props;\n  const cells = [];\n  for (let i = 0; i < 16; i++) {\n    cells.push(<Cell active={combo[i]} key={i.toString()} />);\n  }\n  return (\n    <>\n      <Grid>{cells}</Grid>\n    </>\n  );\n};\n\nexport default ComboGrid;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Combination } from \"./combinations\";\nimport ComboGrid from \"./ComboGrid\";\n\nconst Wrapper = styled.div`\n  left: 571px;\n  position: absolute;\n  top: 347px;\n  width: 340px;\n`;\nconst PlusMore = styled.span`\n  color: #876a1a;\n  font-size: 12px;\n  font-weight: bold;\n  position: absolute;\n  right: 15px;\n  text-align: right;\n  top: 415px;\n`;\n\ntype ThreeLineCombosProps = {\n  combos: Combination[];\n};\nconst ThreeLineCombos = ({ combos }: ThreeLineCombosProps) => {\n  return (\n    <Wrapper>\n      {combos.slice(0, 20).map((combo, i) => (\n        <ComboGrid combo={combo} key={i.toString()} />\n      ))}\n      {combos.length > 20 && (\n        <PlusMore>+ {combos.length - 20} more...</PlusMore>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ThreeLineCombos;\n","import styled from \"styled-components\";\n\nconst Book = styled.div`\n  background-image: url(${process.env.PUBLIC_URL}/images/book.png);\n  background-repeat: no-repeat;\n  height: 800px;\n  margin: 0 auto 20px;\n  position: relative;\n  width: 1200px;\n`;\n\nexport default Book;\n","import styled from \"styled-components\";\n\nconst Board = styled.div`\n  height: 240px;\n  left: 630px;\n  position: absolute;\n  top: 36px;\n  width: 248px;\n`;\n\nexport default Board;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype CellProps = {\n  active?: boolean;\n  img: number;\n  onClick: () => void;\n};\n\nconst CellContainer = styled.div<CellProps>`\n  ${(props) => `\n    cursor: pointer;\n    display: inline-block;\n    height: 60px;\n    width: 62px;\n\n    img {\n      cursor: pointer;\n      opacity: ${props.active ? 1 : 0};\n      transition: .5s;\n    }\n  `}\n`;\n\nconst Cell = (props: CellProps) => {\n  return (\n    <CellContainer {...props}>\n      <img src={`${process.env.PUBLIC_URL}/images/${props.img}.png`} alt=\"\" />\n    </CellContainer>\n  );\n};\n\nexport default Cell;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledP = styled.p`\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst Footer = () => {\n  return (\n    <StyledP>\n      Created by{\" \"}\n      <a\n        href=\"https://eu.finalfantasyxiv.com/lodestone/character/2387352\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Xurion Uroxin\n      </a>{\" \"}\n      of Cerberus |{\" \"}\n      <a\n        href=\"https://github.com/xurion\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Github\n      </a>\n      <br />\n      This website is not affiliated to Square Enix.\n      <br />\n      &copy; 2010 - {new Date().getFullYear()} SQUARE ENIX CO., LTD. All Rights\n      Reserved.\n    </StyledP>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledCount = styled.div`\n  color: #fff;\n  font-size: 60px;\n  left: 885px;\n  line-height: 1;\n  position: absolute;\n  text-align: center;\n  text-shadow: 0px 0px 6px #734f00;\n  top: 75px;\n  width: 100px;\n`;\n\ntype ActiveCountProps = {\n  count: number;\n};\n\nconst ActiveCount = ({ count }: ActiveCountProps) => {\n  return <StyledCount>{count}</StyledCount>;\n};\n\nexport default ActiveCount;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  left: 132px;\n  position: absolute;\n  top: 457px;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border: none;\n  color: #fff;\n  font-weight: bold;\n  text-shadow: 0 0 6px #000;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Separator = styled.span`\n  border-left: 1px solid #000;\n  border-right: 1px solid #fff;\n  display: inline-block;\n  height: 16px;\n  margin: 0 15px;\n  position: relative;\n  top: 2px;\n`;\n\ntype SecondChancePointsPanelProps = {\n  onReset: () => void;\n  onReshuffle: () => void;\n};\nconst SecondChancePointsPanel = ({\n  onReset,\n  onReshuffle,\n}: SecondChancePointsPanelProps) => {\n  return (\n    <Wrapper>\n      <Button onClick={onReset}>Reset</Button>\n      <Separator />\n      <Button onClick={onReshuffle}>Reshuffle</Button>\n    </Wrapper>\n  );\n};\n\nexport default SecondChancePointsPanel;\n","import React from \"react\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  left: 690px;\n  position: absolute;\n  top: 515px;\n`;\n\nconst LoadingIcon = () => (\n  <Wrapper>\n    <CircleLoader color=\"#66b19f\" size=\"100\" />\n  </Wrapper>\n);\n\nexport default LoadingIcon;\n","import { Combination } from \"./combinations\";\nconst STORAGE_KEY = \"wt_combo\";\n\nconst load = (defaultCombo: Combination): Combination => {\n  const existingCombo = window.localStorage.getItem(STORAGE_KEY);\n  return existingCombo ? JSON.parse(existingCombo) : defaultCombo;\n};\n\nconst save = (combo: Combination) =>\n  window.localStorage.setItem(STORAGE_KEY, JSON.stringify(combo));\n\nexport { load, save };\n","import ReactGA from \"react-ga\";\n\nReactGA.initialize(\"G-RQH1TGKGLD\", { debug: true });\n\nexport const TrackPageView = () => {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n};\n\ntype TrackEventProps = {\n  category: string;\n  action: string;\n  label?: string;\n  value?: number;\n};\n\nexport const TrackEvent = ({\n  category,\n  action,\n  label,\n  value,\n}: TrackEventProps) => {\n  ReactGA.event({\n    category,\n    action,\n    label,\n    value,\n  });\n};\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport getAllCombinations, { Combination } from \"./combinations\";\nimport ThreeLineCombos from \"./ThreeLineCombos\";\nimport Book from \"./Book\";\nimport Board from \"./Board\";\nimport Cell from \"./Cell\";\nimport Footer from \"./Footer\";\nimport ActiveCount from \"./ActiveCount\";\nimport SecondChancePointsPanel from \"./SecondChancePointsPanel\";\nimport LoadingIcon from \"./LoadingIcon\";\nimport { load, save } from \"./storage\";\nimport { TrackEvent, TrackPageView } from \"./analytics\";\n\nTrackPageView();\n\nfunction App() {\n  const loadedData = load(new Array(16).fill(false) as Combination);\n  const [cellStates, setCellStates] = useState(loadedData);\n  const [reshuffling, setReshuffling] = useState(false);\n\n  const setAndPersistCellStates = (combo: Combination) => {\n    setCellStates(combo);\n    save(combo);\n  };\n\n  const handleCellClick = (cell: number) => {\n    if (getActiveCount() === 9 && cellStates[cell] === false) {\n      return;\n    }\n\n    const newCellsState: Combination = [...cellStates];\n    newCellsState[cell] = !cellStates[cell];\n    setAndPersistCellStates(newCellsState);\n  };\n\n  const getActiveCount = () =>\n    cellStates.reduce((prev, curr) => (curr ? prev + 1 : prev), 0);\n\n  const compareCombos = (w: Combination, c: Combination): boolean => {\n    let potentialCombo = true;\n    const allFalse = c.indexOf(true) === -1;\n    if (allFalse) {\n      return true;\n    }\n\n    for (let i = 0; i < 16; i++) {\n      if (c[i] === true && w[i] === false) {\n        potentialCombo = false;\n        break;\n      }\n    }\n\n    return potentialCombo;\n  };\n\n  const getPotentialCombos = (combination: Combination): Combination[] => {\n    const potentialCombos: Combination[] = [];\n    const winningCombos = getAllCombinations();\n    winningCombos.forEach((winningCombo) => {\n      if (compareCombos(winningCombo, combination)) {\n        potentialCombos.push(winningCombo);\n      }\n    });\n    return potentialCombos;\n  };\n\n  const reset = () => {\n    setAndPersistCellStates(new Array(16).fill(false) as Combination);\n  };\n\n  const handleResetClick = () => {\n    TrackEvent({\n      category: \"board\",\n      action: \"reset\",\n      value: getActiveCount(),\n    });\n    reset();\n  };\n\n  const shuffleCombination = (combo: Combination) => {\n    const shuffledCombo: Combination = [...combo];\n    for (let i = shuffledCombo.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = shuffledCombo[i];\n      shuffledCombo[i] = shuffledCombo[j];\n      shuffledCombo[j] = temp;\n    }\n    return shuffledCombo;\n  };\n\n  const reshuffle = () => {\n    setReshuffling(true);\n    const active = getActiveCount();\n    reset();\n    setTimeout(() => {\n      const activePart = new Array(active).fill(true);\n      const inactivePart = new Array(16 - active).fill(false);\n      const combo = shuffleCombination([\n        ...activePart,\n        ...inactivePart,\n      ] as Combination);\n      setAndPersistCellStates(combo);\n      setReshuffling(false);\n    }, 1000);\n  };\n\n  const cells = [];\n  for (let i = 0; i < 16; i++) {\n    cells.push(\n      <Cell\n        active={cellStates[i]}\n        onClick={() => handleCellClick(i)}\n        img={i + 1}\n        key={i.toString()}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Book>\n        <ActiveCount count={getActiveCount()} />\n        <Board>{cells}</Board>\n        <SecondChancePointsPanel\n          onReset={handleResetClick}\n          onReshuffle={reshuffle}\n        />\n        {reshuffling ? (\n          <LoadingIcon />\n        ) : (\n          <ThreeLineCombos combos={getPotentialCombos(cellStates)} />\n        )}\n      </Book>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}